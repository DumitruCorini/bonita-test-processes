/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.bonitasoft.example

import org.bonitasoft.engine.api.APIClient
import org.bonitasoft.engine.api.ApiAccessType
import org.bonitasoft.engine.api.ProfileAPI
import org.bonitasoft.engine.identity.User
import org.bonitasoft.engine.profile.ProfileMemberCreator
import org.bonitasoft.engine.search.SearchOptionsBuilder
import org.bonitasoft.engine.util.APITypeManager
import org.bonitasoft.example.processes.*

class App {

    fun run(url: String) {
        APITypeManager.setAPITypeAndParams(ApiAccessType.HTTP, mapOf(
                "server.url" to url,
                "application.name" to "bonita"
        ))
        val apiClient = APIClient().apply { login("install", "install") }


        SetupOrganization().accept(apiClient)

        val calledProcess = ProcessWith2AutomaticTasks().apply {
            accept(apiClient)
        }
        val process = ProcessWithCallActivityAborted(calledProcess.name, calledProcess.version).apply {
            accept(apiClient)
        }
        val callProcessXTimes = StartXProcesses(process.name, process.version, 200).apply {
            accept(apiClient)
        }
//        StartXProcessesEvery5Seconds(callProcessXTimes.name, callProcessXTimes.version, 1).apply {
//            accept(apiClient)
//        }

    }
}


infix fun <T> APIClient.safeExec(executable: APIClient.() -> T): T? {
    return try {
        this.executable()
    } catch (e: Exception) {
        println("Error: ${e.javaClass.name} ${e.message}")
        null
    }
}

fun ProfileAPI.getProfileByName(name: String): Long =
        searchProfiles(SearchOptionsBuilder(0, 1).filter("name", name).done()).result.first().id

fun ProfileAPI.addUserToProfile(user: User, profileName: String) {
    createProfileMember(ProfileMemberCreator(getProfileByName(profileName)).setUserId(user.id))
}

fun main(args: Array<String>) {
    App().run(args.getOrElse(0) { "http://localhost:8080" })

}
